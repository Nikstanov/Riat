version: "3.9"
services:

#  keycloak_postgres:
#    image: postgres
#    environment:
#      POSTGRES_USER: "admin"
#      POSTGRES_PASSWORD: "admin"
#      POSTGRES_HOST_AUTH_METHOD: trust
#      POSTGRES_DB: bitnami_keycloak
#    expose:
#      - "5431"
#    ports:
#      - "5431:5431"
#    restart: unless-stopped

  keycloak:
    image: bitnami/keycloak:latest
    environment:
      KEYCLOAK_ADMIN_USER : admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_DATABASE_VENDOR: dev-mem
      KEYCLOAK_HTTP_PORT: 8091
#      KEYCLOAK_DATABASE_HOST: keycloak_postgres
#      KEYCLOAK_DATABASE_PORT: 5431
#      KEYCLOAK_DATABASE_PASSWORD: admin
    ports:
      - "8091:8091"
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
#    depends_on:
#      - keycloak_postgres

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_DB: inventory_db
    ports:
      - "5432:5432"
    restart: unless-stopped

  inventory:
    build:
      context: .
      dockerfile: inventory/Dockerfile
    ports:
      - "8080:8080"
    depends_on: 
      - postgres

  grafana:
#    image: grafana/grafana
    build:
      context: dockerfiles/grafana/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./dockerfiles/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 8090:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper