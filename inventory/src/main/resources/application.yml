spring:

  config:
    name: inventory_app

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://host.docker.internal:8091/realms/riat_app_realm
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

  kafka:
    bootstrap-servers: host.docker.internal:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  datasource:
    password: admin
    url: jdbc:postgresql://host.docker.internal:5432/inventory_db
    username: admin
    driver-class-name: org.postgresql.Driver
  application:
    name: Inventory
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true

kafka:
  topics:
    emails-topic: email
    errors-topic: errors
    logs-topic: logs